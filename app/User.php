<?php

namespace App;

use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class User extends Authenticatable
{
    use Notifiable, FollowAble;

    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
        'username', 'avatar', 'name', 'email', 'password',
    ];

    /**
     * The attributes that should be hidden for arrays.
     *
     * @var array
     */
    protected $hidden = [
        'password', 'remember_token',
    ];

    /**
     * The attributes that should be cast to native types.
     *
     * @var array
     */
    protected $casts = [
        'email_verified_at' => 'datetime',
    ];

//    public function getAvatarAttribute()
    public function getAvatarAttribute($value)
    {
//        return "https://i.pravatar.cc/200?u=" . $this->email;
        return asset('storage/'.$value);
    }

    public function timeline()
    {
//        return Tweet::where('user_id', $this->id)->latest()->get();
//        return Tweet::latest()->get();

        // include all of the users tweets as well as the tweets of everyone they follow in descending order by date
        $friends = $this->follows->pluck('id');
//        $ids->push($this->id);
//        return Tweet::whereIn('user_id', $ids)->latest()->get();
        return Tweet::whereIn('user_id', $friends)
            ->orWhere('user_id', $this->id)
            ->latest()->get();
    }

    public function tweets()
    {
        return $this->hasMany(Tweet::class)->latest();
    }

    public function getRouteKeyName()
    {
//        return parent::getRouteKeyName();  // TODO: change the autogenerated stub
//        return 'name';
        return 'username';
    }

    public function path($append = '')
    {
        $path = route('profile', $this->username);
//        $path = route('profile', $this->name);
        return $append ? "{$path}/{$append}" : $path;
    }

    public function setPasswordAttribute($value)
    {
        $this->attributes['password'] = bcrypt($value);
    }
}
